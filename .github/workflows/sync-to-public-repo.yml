name: Prepare and sync with public repo

on:
  push:
    branches:
      - develop
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }} (${{ github.head_ref || github.ref_name }})'
  cancel-in-progress: true

permissions:
  contents: read

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  PUBLIC_REPO_URL: git@github.com:tangem/tangem-sdk-ios-public.git

jobs:
  prepare-and-sync:
    runs-on: macos-15
    steps:
      # This delay gives the `set-tag.yml` action some time 
      # to assign the release tag after merging a PR to the master branch
      - name: Defer the job execution
        run: sleep 90s
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install git-filter-repo
        run: pip3 install git-filter-repo --break-system-packages

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # When using Github runner images, the preferred way of setting the Ruby version is to use this official action instead of using rvm/rbenv
      - name: Install Ruby
        uses: ruby/setup-ruby@a2bbe5b1b236842c1cb7dd11e8e3b51e0a616acc  # v1.202.0

      - name: Configure git
        run: |
          git config user.name "Tangem Bot"
          git config user.email "mobile@tangem.com"

      - name: Get latest tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Remove sensitive info from code and commit (if needed)
        run: |
          ./Utilities/public-repo-sync-support/clear_sensitive_data.sh

          git add .
          git diff
          git commit -m "Auto-cleaned sensitive data in files" || echo "Nothing to commit"

      - name: Clean private repo commit metadata
        env:
          RELEASE_TAG: ${{ steps.get-latest-tag.outputs.latest_tag }}
        run: |
          ./Utilities/public-repo-sync-support/clear_commit_metadata.sh

      - name: Remove unused files and commit (if needed)
        run: |
          # Prevents the `notification-payload` file from being deleted by the `clear_unused_files.sh` script
          mv ./Utilities/public-repo-sync-support/notification-payload.yml .
          ./Utilities/public-repo-sync-support/clear_unused_files.sh

          git diff
          git commit -m "Removed unused files" || echo "Nothing to commit"

      - name: Authorize SSH session (for pushing the source code to GH Public)
        env:
          SSH_KEY: ${{ secrets.IOS_PUBLIC_REPO_SYNC_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com > ~/.ssh/known_hosts
          echo "${SSH_KEY}" > ~/.ssh/ssh_key
          chmod 600 ~/.ssh/ssh_key
          ssh-agent -a "${SSH_AUTH_SOCK}" > /dev/null || true
          ssh-add ~/.ssh/ssh_key

      - name: Push mirror to public repo
        run: |
          git push --mirror ${PUBLIC_REPO_URL}

      - name: Get public repo head
        id: get-latest-commit
        run: |
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT

      - name: Slack success message
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        env:
          SLACK_NOTIFICATION_CHANNEL: ${{ vars.SLACK_CHANNEL_DEPLOYMENTS_IOS }}
          SLACK_NOTIFICATION_TEXT: "Sync of the Card SDK with tag '${{ (steps.get-latest-tag.outputs.latest_tag != '' && steps.get-latest-tag.outputs.latest_tag) || 'N/A' }}' with the public repo completed"
          SLACK_NOTIFICATION_CONTEXT: ":large_green_circle: *Synced*"
          SLACK_NOTIFICATION_PRIVATE_SHA: ${{ github.sha }}
          SLACK_NOTIFICATION_PUBLIC_SHA: ${{ (steps.get-latest-commit.outputs.latest_commit != '' && steps.get-latest-commit.outputs.latest_commit) || 'N/A' }}
          SLACK_NOTIFICATION_SERVER_URL: ${{ github.server_url }}
          SLACK_NOTIFICATION_REPO: ${{ github.repository }}
          SLACK_NOTIFICATION_RUN_ID: ${{ github.run_id }}
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload-file-path: "./notification-payload.yml"
          payload-templated: true

      - name: Slack failure message
        if: failure()
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        env:
          SLACK_NOTIFICATION_CHANNEL: ${{ vars.SLACK_CHANNEL_DEPLOYMENTS_IOS }}
          SLACK_NOTIFICATION_TEXT: "Sync of the Card SDK with tag '${{ (steps.get-latest-tag.outputs.latest_tag != '' && steps.get-latest-tag.outputs.latest_tag) || 'N/A' }}' with the public repo failed"
          SLACK_NOTIFICATION_CONTEXT: ":red_circle: *Error occurred*"
          SLACK_NOTIFICATION_PRIVATE_SHA: ${{ github.sha }}
          SLACK_NOTIFICATION_PUBLIC_SHA: ${{ (steps.get-latest-commit.outputs.latest_commit != '' && steps.get-latest-commit.outputs.latest_commit) || 'N/A' }}
          SLACK_NOTIFICATION_SERVER_URL: ${{ github.server_url }}
          SLACK_NOTIFICATION_REPO: ${{ github.repository }}
          SLACK_NOTIFICATION_RUN_ID: ${{ github.run_id }}
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload-file-path: "./notification-payload.yml"
          payload-templated: true
